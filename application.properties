# debug=true
# trace=true

server.tomcat.basedir=${TOMCAT_BASE_DIR}

server.port=${LABKEY_PORT}

spring.main.log-startup-info=true

spring.main.banner-mode=off

spring.application.name=LabKey

# logging.pattern.console=
logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%-5.5p) %clr(%5.5replace(%p){'.+', ${PID:-}}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(${LOGGER_PATTERN}){cyan} %clr(:){faint} %m%n%wEx
# logging.pattern.console=%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%-4.4t]){faint} %clr(%-80.120logger{119}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}

logging.level.root=WARN

logging.group.tomcat=org.apache.catalina,org.apache.coyote,org.apache.tomcat
logging.level.tomcat=OFF

logging.level.net.sf.ehcache=ERROR

# logging.level.org.apache=TRACE
# logging.level.org.apache.catalina.core.Catalina=TRACE
# logging.level.org.apache.catalina.core=TRACE
# logging.level.org.apache.catalina.LifecycleException=TRACE
# logging.level.org.apache.catalina.loader.WebappClassLoaderBase=OFF
# logging.level.org.apache.catalina.session=TRACE
# logging.level.org.apache.catalina.startup.ContextConfig=OFF
# logging.level.org.apache.catalina.util.LifecycleBase=TRACE
# logging.level.org.apache.catalina.util=TRACE
# logging.level.org.apache.catalina=TRACE
# logging.level.org.apache.coyote=TRACE
# logging.level.org.apache.logging.log4j.core.net=TRACE
# logging.level.org.apache.naming=OFF
# logging.level.org.apache.tomcat.util.IntrospectionUtils=OFF
# logging.level.org.apache.tomcat.util.net=TRACE
# logging.level.org.apache.tomcat.util.scan=OFF
# logging.level.org.apache.tomcat.util=TRACE
# logging.level.org.labkey.embedded.LabKeyServer=DEBUG
logging.level.org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener=OFF
# logging.level.org.springframework.boot.autoconfigure=OFF
# logging.level.org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer=TRACE
# logging.level.org.springframework.boot.web.embedded.tomcat.TomcatWebServer=TRACE
# logging.level.org.springframework.boot.web.servlet.context=TRACE
logging.level.org.springframework.boot.web.servlet=WARN
logging.level.org.springframework.boot=INFO

# logging.level.org.apache.catalina.loader.WebappClassLoaderBase=INFO
logging.level.org.apache.jasper.servlet.TldScanner=WARN
# logging.level.org.apache.tomcat.util.digester=INFO
# logging.level.org.apache.tomcat.util.scan.StandardJarScanner=INFO
# logging.level.org.springframework.boot.autoconfigure.condition=INFO
# logging.level.org.springframework.core.env.PropertySourcesPropertyResolver=INFO

context.dataSourceName[0]=jdbc/labkeyDataSource
context.driverClassName[0]=org.postgresql.Driver
context.url[0]=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}${POSTGRES_PARAMETERS}
context.username[0]=${POSTGRES_USER}
context.password[0]=${POSTGRES_PASSWORD}

# context.dataSourceName[1]=jdbc/@@extraJdbcDataSource@@
# context.driverClassName[1]=@@extraJdbcDriverClassName@@
# context.url[1]=@@extraJdbcURL@@
# context.username[1]=@@extraJdbcUser@@
# context.password[1]=@@extraJdbcPassword@@

# TODO: console access logs w/o symlink
# server.tomcat.accesslog.enabled= true
# server.tomcat.accesslog.directory= /dev
# server.tomcat.accesslog.prefix= stdout
# server.tomcat.accesslog.buffered= false
# server.tomcat.accesslog.suffix=
# server.tomcat.accesslog.pattern=%{org.apache.catalina.AccessLog.RemoteAddr}r %l %u %t "%r" %s %b %D %S "%{Referer}i" "%{User-Agent}i" %{LABKEY.username}s %q

server.tomcat.accesslog.directory=/tmp
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.prefix=access
server.tomcat.accesslog.suffix=.log
server.tomcat.accesslog.rotate=false
server.tomcat.accesslog.pattern=%{org.apache.catalina.AccessLog.RemoteAddr}r %l %u %t "%r" %s %b %D %S "%{Referer}i" "%{User-Agent}i" %{LABKEY.username}s %q

server.http2.enabled=true

server.ssl.enabled=true

server.ssl.ciphers=${TOMCAT_SSL_CIPHERS}
server.ssl.enabled-protocols=${TOMCAT_SSL_ENABLED_PROTOCOLS}
server.ssl.protocol=${TOMCAT_SSL_PROTOCOL}


# must match values in entrypoint.sh
# server.ssl.key-alias=${TOMCAT_KEYSTORE_ALIAS}
# server.ssl.key-store=${LABKEY_HOME}/${TOMCAT_KEYSTORE_FILENAME}
# server.ssl.key-store-password=${TOMCAT_KEYSTORE_PASSWORD}
server.ssl.key-store-type=${TOMCAT_KEYSTORE_FORMAT}

# trust.store=${LABKEY_HOME}/${TOMCAT_KEYSTORE_FILENAME}
# trust.store.password=${TOMCAT_KEYSTORE_PASSWORD}

# server.ssl.key-alias=tomcat
# server.ssl.key-store=
# server.ssl.key-store-password=a43b3fcf46121a
# server.ssl.key-store-type=PKCS12

# trust.store=/app/labkey.p12
# trust.store.password=a43b3fcf46121a

context.masterEncryptionKey=${LABKEY_MEK}
context.serverGUID=${LABKEY_GUID}

server.servlet.context-path=/

mail.smtpHost=${SMTP_HOST}
mail.smtpUser=${SMTP_USER}
mail.smtpPort=${SMTP_PORT}
mail.smtpPassword=${SMTP_PASSWORD}

management.endpoints.enabled-by-default=false
# management.endpoint.env.enabled=true

info.labkey.version=${LABKEY_VERSION}
info.labkey.distribution=${LABKEY_DISTRIBUTION}
