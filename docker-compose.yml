---
version: "3"

services:
  labkey:
    container_name: labkey
    image: ${COMPOSE_IMAGE:-labkey/community}
    # build: {"context": ".", "args": ["LABKEY_VERSION=21.3-SNAPSHOT"]}
    depends_on:
      - postgres
      # - mailhog
    ports:
      - ${HOST_PORT:-8443}:8443
    volumes:
      - ./mounts/files:/labkey/files
      # - files:/labkey/files
      - ./mounts/modules:/labkey/externalModules
      - ./mounts/logs:/labkey/logs
    environment:
      # - DEBUG=1
      # - LABKEY_SYSTEM_SHORT_NAME=Sirius Cybernetics Corporation
      # - LABKEY_COMPANY_NAME=Sirius Cybernetics Corporation
      # - LABKEY_SYSTEM_DESCRIPTION=Sirius Cybernetics Corporation

      # - TOMCAT_ENABLE_ACCESS_LOG=1

      # - LABKEY_STARTUP_BASIC_EXTRA=
      # - LABKEY_STARTUP_DISTRIBUTION_EXTRA=

      - POSTGRES_PASSWORD=a"placeholder#'password
      - POSTGRES_HOST=postgres

      # - SMTP_HOST=mailhog
      # - SMTP_PORT=1025

  postgres:
    container_name: postgres
    image: postgres:13
    # silent postgres w/o needing to remake the container!
    entrypoint:
      - "/bin/bash"
      - "-c"
      - "docker-entrypoint.sh postgres >/dev/null 2>&1"
    environment:
      - POSTGRES_PASSWORD=a"placeholder#'password
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # mailhog:
  #   container_name: mailhog
  #   image: mailhog/mailhog
  #   logging:
  #     driver: 'none'  # disable saving logs
  #   ports:
  #     - 1025:1025 # smtp server
  #     - 8025:8025 # web ui

  # restic:
  #   container_name: restic
  #   image: restic/restic
  #   depends_on:
  #     - labkey
  #     - minio
  #   environment:
  #     - AWS_ACCESS_KEY_ID=placeholder
  #     - AWS_SECRET_ACCESS_KEY=placeholder
  #     - RESTIC_PASSWORD_COMMAND=echo placeholder
  #     - RESTIC_REPOSITORY=s3:http://minio:9000/backup
  #   volumes:
  #     - files:/backup
  #   entrypoint: /bin/sh
  #   command:
  #     - -x
  #     - -c
  #     - 'restic init; while true; do restic backup /backup || exit 1; sleep 60; done'

  # minio:
  #   container_name: minio
  #   image: minio/minio
  #   environment:
  #     - MINIO_ROOT_USER=placeholder
  #     - MINIO_ROOT_PASSWORD=placeholder
  #   command:
  #     - server
  #     - /data
  #   volumes:
  #     - ./mounts/backups:/data

# volumes:
#   files:
